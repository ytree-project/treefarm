version: 2.1

commands:
  set-env:
    description: "Set environment variables."
    steps:
      - run:
          name: "Set environment variables."
          command: |
            echo 'export YT_DIR=$HOME/yt-git' >> $BASH_ENV
            echo 'export YTREE_DIR=$HOME/ytree' >> $BASH_ENV
            echo 'export TREEFARM_DATA=$HOME/treefarm_test' >> $BASH_ENV

  install:
    description: "Install treefarm and dependencies."
    parameters:
      ytdev:
        type: integer
        default: 0
    steps:
      - run:
          name: "Install treefarm and dependencies."
          command: |
            if [ ! -d $HOME/venv ]; then
                python3 -m venv $HOME/venv
            fi
            source $BASH_ENV
            source $HOME/venv/bin/activate
            pip install --upgrade pip
            pip install --upgrade wheel
            pip install --upgrade setuptools
            pip install Cython numpy
            pip install girder-client
            export MAX_BUILD_CORES=2
            if [ << parameters.ytdev >> == 1 ]; then
                if [ ! -f $YT_DIR/README.md ]; then
                    git clone --branch=master https://github.com/yt-project/yt $YT_DIR
                fi
                pushd $YT_DIR
                git pull origin master
                git checkout master
                pip install -e .
                popd
            fi
            git clone https://github.com/ytree-project/ytree $YTREE_DIR
            pushd $YTREE_DIR
            pip install -e .
            popd
            pip install -e .[dev]

  configure-treefarm:
    description: "Configure treefarm."
    steps:
      - run:
          name: "Configure treefarm."
          command: |
            # configure treefarm
            mkdir -p $HOME/.config/treefarm
            echo "[treefarm]" > $HOME/.config/treefarm/treefarmrc
            echo "test_data_dir = $TREEFARM_DATA" >> $HOME/.config/treefarm/treefarmrc

  download-test-data:
    description: "Download test data."
    steps:
      - run:
          name: "Download test data."
          command: |
            # download test data
            if [ ! -d $TREEFARM_DATA/rockstar ]; then
                source $BASH_ENV
                source $HOME/venv/bin/activate
                girder-cli --api-url https://girder.hub.yt/api/v1 download 59835a1ee2a67400016a2cda $TREEFARM_DATA
            fi

  lint:
    description: "Lint."
    steps:
      - run:
          name: "Lint."
          command: |
            source $BASH_ENV
            source $HOME/venv/bin/activate
            flake8 treefarm

  run-tests:
    description: "Build treefarm and run tests."
    parameters:
      coverage:
        type: integer
        default: 0

    steps:
      - run:
          name: "Build treefarm and run tests."
          command: |
            source $BASH_ENV
            source $HOME/venv/bin/activate
            pytest --cov=treefarm tests
            if [ << parameters.coverage >> == 1 ]; then
                # code coverage report
                codecov
            fi

  build-docs:
    description: "Test the docs build."
    steps:
      - run:
          name: "Test the docs build."
          command: |
            source $BASH_ENV
            source $HOME/venv/bin/activate
            cd doc/source
            python -m sphinx -M html "." "_build" -W

executors:
  python:
    parameters:
      tag:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.tag >>

jobs:
  tests:
    parameters:
      tag:
        type: string
        default: latest
      ytdev:
        type: integer
        default: 0
      coverage:
        type: integer
        default: 0
    executor:
      name: python
      tag: << parameters.tag >>

    working_directory: ~/treefarm

    steps:
      - checkout
      - set-env

      - restore_cache:
          name: "Restore dependencies cache."
          key: python-<< parameters.tag >>-<< parameters.ytdev >>-dependencies-v2

      - install:
          ytdev: << parameters.ytdev >>
      - configure-treefarm

      - save_cache:
          name: "Save dependencies cache."
          key: python-<< parameters.tag >>-<< parameters.ytdev >>-dependencies-v2
          paths:
            - ~/.cache/pip
            - ~/venv
            - ~/yt-git

      - lint

      - restore_cache:
          name: "Restore test data cache."
          key: test-data-v1

      - download-test-data

      - save_cache:
          name: "Save test data cache."
          key: test-data-v1
          paths:
            - ~/treefarm_test

      - run-tests:
          coverage: << parameters.coverage >>

  docs-test:
    parameters:
      tag:
        type: string
        default: latest
    executor:
      name: python
      tag: << parameters.tag >>

    working_directory: ~/treefarm

    steps:
      - checkout
      - set-env

      - restore_cache:
          name: "Restore dependencies cache."
          key: python-<< parameters.tag >>-1-dependencies-v1

      - install:
          ytdev: 1
      - configure-treefarm

      - save_cache:
          name: "Save dependencies cache."
          key: python-<< parameters.tag >>-1-dependencies-v1
          paths:
            - ~/.cache/pip
            - ~/venv
            - ~/yt-git

      - build-docs

workflows:
   version: 2

   normal-tests:
     jobs:
       - tests:
           name: "Python 3.6 tests"
           tag: "3.6.11"
           ytdev: 1

       - tests:
           name: "Python 3.8 tests with yt-dev"
           tag: "3.8.5"
           coverage: 1
           ytdev: 1

       - docs-test:
           name: "Test docs build"
           tag: "3.8.5"

   daily:
     triggers:
       - schedule:
           cron: "0 0 * * *"
           filters:
            branches:
              only:
                - master
     jobs:
       - tests:
           name: "Python 3.8 tests with yt-dev"
           tag: "3.8.5"
           coverage: 0
           ytdev: 1

       - docs-test:
           name: "Test docs build"
           tag: "3.8.5"

   weekly:
     triggers:
       - schedule:
           cron: "0 0 * * 3"
           filters:
            branches:
              only:
                - master
     jobs:
       - tests:
           name: "Python 3.7 tests"
           tag: "3.7.8"
           ytdev: 1
